import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
//import { signIn, signOut, useSession } from "next-auth/react";
//import {serverSideTranslations} from "next-i18next/serverSideTranslations";
import { useForm, SubmitHandler } from "react-hook-form";
import { trpc } from "../../utils/trpc";
import Navbar2 from "../../components/navbar";


const EditProduct: NextPage = () => {
  const  {data:userData} = trpc.user.userDetail.useQuery();
  const updateUser = trpc.user.updateData.useMutation({
    async onSuccess() {
      console.log("onSuccess");
    },
  });
  return (
    <>
      <Head>
        <title>Go2Shop</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar2/>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">

          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]"> Product </h1>
          <h1 className="text-5xl font-extrabold tracking-tight text-emerald-600 sm:text-[5rem]"> Edit </h1>


          <form className="flex flex-col items-center gap-2"
                onSubmit={async (e) => {

            e.preventDefault();
            const $form = e.currentTarget;
            const values = Object.fromEntries(new FormData($form));
            //type Input = inferProcedureInput<AppRouter['user']['updateData']>;
            const input= {
              name: values.name as string,
              userPhone: values.userPhone as string,
              userAddress: values.userAddress as string,
            };
            try {
              await updateUser.mutateAsync(input);

              //$form.reset();
            } catch (cause) {
              console.error({ cause }, 'Failed to add post');
            }
          }}
          >
            <label className="text-2xl text-white">Name</label>
            <input className="rounded-xl bg-white/10 p-4 text-white" type="text" placeholder="Name" name={"name"} defaultValue={userData?.name ? userData.name : ""} />
            <label className="text-2xl text-white">Upload Image</label>
            <input className="rounded-xl bg-white/10 p-4 text-white" type="file" />
            <label className="text-2xl text-white">Email</label>
            <input className="rounded-xl bg-white/10 p-4 text-white" type="text" placeholder="Email" name={"email"} defaultValue={userData?.email ? userData.email : ""} />
            <label className="text-2xl text-white">Phone</label>
            <input className="rounded-xl bg-white/10 p-4 text-white" type="text" placeholder="Phone" name={"userPhone"} defaultValue={userData?.userPhone ? userData.userPhone: ""} />
            <label className="text-2xl text-white">Address</label>
            <input className="rounded-xl bg-white/10 p-4 text-white" type="text" placeholder="Address" name={"userAddress"} defaultValue={userData?.userAddress ? userData.userAddress : ""} />
            <button type={"submit"} className={ "rounded-xl bg-white/10 p-4 text-white"}   >Save</button>
          </form>

        </div>
      </main>
    </>
  );
};

export default EditProduct;

